---
Commit:
	- get deep_import association distribution
		- DeepImportModel.group( belongs_to_id_field ).select( count( deep_import_id ) ).order( belongs_to_id_field )
	- get and compare association distribution 
		- Model.group( belongs_to_id_field ).select( count( id ) ).order( belongs_to_id_field )
		- is the ordering correct to do this? or should I force a group_by deep_import_belongs_to_id_field

---
activerecord-import:
	- check for errors

---
testing:
	- config
	- setup
	- cache
	- commit
				
---
batch id:
- get a process id
- set deep_import_id = "#{process_id}.#{id}"
- commit: scope all queries to this process_id prefix

---
belongs_to:
- to allow:
	- child.other_parent = other_parent
- :before_save:
	- for each /.*_id/ field, if ! self.<non-id>.nil?, set deep import id's accordingly
		- # for each association

---
Config File:
	- Validate: check class names for existence/validity
	- Generate: analyze models with ruby_erd

---
Model Flags:
_polymorphic:
